buildscript {
    ext {
        kotlinVersion = '1.3.10'
        jwtVersion = '0.10.5'
        springBootVersion = '2.1.0.RELEASE'
        arrowVersion = '0.7.2'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-noarg'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.intouch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-configuration-processor')

    implementation('com.fasterxml.jackson.module:jackson-module-parameter-names')
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
    implementation('org.jetbrains.kotlin:kotlin-reflect')
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0')

    implementation('org.modelmapper:modelmapper:2.3.0')
    
    implementation("io.arrow-kt:arrow-core:$arrowVersion")
    implementation("io.arrow-kt:arrow-syntax:$arrowVersion")
    implementation("io.arrow-kt:arrow-typeclasses:$arrowVersion")
    implementation("io.arrow-kt:arrow-data:$arrowVersion")
    implementation("io.arrow-kt:arrow-instances-core:$arrowVersion")
    implementation("io.arrow-kt:arrow-instances-data:$arrowVersion")
    implementation "io.arrow-kt:arrow-free:$arrowVersion"
    implementation "io.arrow-kt:arrow-mtl:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-rx2:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-reactor:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-kotlinx-coroutines:$arrowVersion"
    implementation "io.arrow-kt:arrow-optics:$arrowVersion"
    implementation "io.arrow-kt:arrow-generic:$arrowVersion"
    implementation "io.arrow-kt:arrow-recursion:$arrowVersion"
    kapt("io.arrow-kt:arrow-annotations-processor:$arrowVersion")

    implementation 'io.springfox:springfox-swagger2:2.7.0'
    implementation 'io.springfox:springfox-swagger-ui:2.7.0'

    implementation "io.jsonwebtoken:jjwt-api:$jwtVersion"
    runtime "io.jsonwebtoken:jjwt-impl:$jwtVersion"
    runtime "io.jsonwebtoken:jjwt-jackson:$jwtVersion"

    implementation "org.json:json:20090211"

    implementation "com.zaxxer:HikariCP:3.2.0"

    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')

    implementation project(':intouch-microbase')
    implementation project(':intouch-lib')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.M3"
    }
}
